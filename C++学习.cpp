linux 使用vim编译c++程序

vim hello.cpp
i  输入 esc  :wq 保存退出 
g++ hello.cpp  编译
./a.out 输出


一.开始：
1.
return 0；在大多数系统中主函数里面返回值用来指示状态，返回值0表示成功，非0的返回值含义由系统定义，通常用来指出错误类型；

2.
 int val=2;
    int &aa=val;//引用，
    val=3;
    aa=4;
    cout << aa << endl;
    cout << val << endl;
    int &bb=aa;
    cout << bb << endl;

3. 
void 类型指针不能操作 ，不能访问。

要想在多个文件之间共享const的值，需加上extern

int i=42;
const int &r1=i; 正确
const int &r2=r1*2;正确
int &r3=r1*2;  错误 r3是一个普通的非常量引用

double val=3.14;
const int &r1=val ;正确   引用了一个临时量对象 ；

普通指针不能指向常量；指针不能修改常量的值

4.
strlen(p),
strcmp(p1,p2) ; 比较  ，相等返回0，1>2 返回正值
strcat(p1,p2) ；将p2附到p1后
strcpy(p1,p2); 复制

5.
类的基本思想是数据抽象和封装，数据抽象是一种依赖于接口和实现分离的编程（以及设计）技术。类的接口包括用户所能执行的操作；类的实现则包括类的数据成员，负责接口实现的函数体以及各种私有函数。
封装后用户只能使用接口而无法访问实现部分。

编译器分为两步处理类：显示编译成员的声明，然后是成员函数体；因此成员函数体可以任意调用类中的其他成员
而无需在意这些成员出现的次序

引入const成员函数是为了修改隐式this指针的类型。  常量成员函数
因为默认情况下this的类型是指向类类型非常量版本的常量指针

！！6. 
使用class和struct定义类的唯一区别就是默认的访问权限，class是第一个访问说明符之前都是private的，struct则相反。

友元只在类定义的内部。

封装的益处：
1.确保用户不会无意间破坏封装对象的状态。
2.被封装的类的具体实现细节可以随时改变，而无需调整用户级别的代码。


























