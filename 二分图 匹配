/*
poj2446
*/

#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <map>
using namespace std;
const int maxn = 2000;
int match[maxn];
int visit[maxn];
bool graph[maxn][maxn];
bool hole[maxn][maxn];
int id[maxn][maxn];
int cent;
 
bool dfs(int u)
{
    for(int i = 1; i <= cent; i++)
    {
        if(graph[u][i] && !visit[i])
        {
            visit[i] = 1;
            if(match[i] == -1 || dfs(match[i]))
            {
                match[i] = u;
                return true;
            }
        }
    }
    return false;
}
 
int Maxmatch()
{
    int sum = 0;
    memset(match,-1,sizeof(match));
    for(int i = 1; i <= cent; i++)
    {
        memset(visit,0,sizeof(visit));
        if(dfs(i)) ++sum;
    }
    return sum;
}
int main()
{
    int n,m,k;
    while(scanf("%d%d%d",&m,&n,&k) != EOF)
    {
        memset(graph,false,sizeof(graph));
        for(int i = 1; i <= m; i++)
            for(int j = 1; j <= n; j++)
                hole[i][j] = true;
 
        while(k--)
        {
            int a,b;
            scanf("%d%d",&a,&b);
            hole[b][a] = false;//这里很坑爹...注意题意
        }
        cent = 0;
        for(int i = 1; i <= m; i++)
            for(int j = 1; j <= n; j++)
            {
                if(hole[i][j])
                {
                    id[i][j] = ++cent;
                }
            }
 
        for(int i = 1; i <= m; i++)
            for(int j = 1; j <= n; j++)
            {
                if(hole[i][j])
                {
                    if(i-1>0 && hole[i-1][j])
                        graph[ id[i][j] ][ id[i-1][j] ] = true;
                    if(i+1<=m && hole[i+1][j])
                        graph[ id[i][j] ][ id[i+1][j] ] = true;
                    if(j-1>0 && hole[i][j-1])
                        graph[ id[i][j] ][ id[i][j-1] ] = true;
                    if(j+1<=n && hole[i][j+1])
                        graph[ id[i][j] ][ id[i][j+1] ] = true;
                }
 
            }
        int ans = Maxmatch();
        if(ans == cent) printf("YES\n");
        else printf("NO\n");
    }
    return 0;
}
