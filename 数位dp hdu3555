///hdu 3555


#include <bits/stdc++.h>

using namespace std;

typedef long long ll;

const int maxn = 1e9;
int digit[20];
ll dp[20][2];

///if4代表是它的上一位是否是4 limit代表上一位是否是上界
ll dfs(int len,bool if4,bool limit){///len:数位长度  if4//(status)判读该数位上是否为4 limit判断上界
    if(len==0) return 1; ///len==0 代表个位
    if(!limit && dp[len][if4]) return dp[len][if4];

    ll cnt=0,up_bound=(limit?digit[len]:9);

    for(ll i=0;i<=up_bound;++i){
        if(if4 && i==9) continue;/// 剪掉49这一支；
        cnt+=dfs(len-1,i==4,limit&&i==up_bound);
    }
    if(!limit) dp[len][if4]= cnt;
    return cnt;
}
ll solve(ll num){
    int k=0;///记录有多少个数位
    while(num){
        digit[++k]=num%10;
        num/=10;
    }
    return dfs(k,false,true);
}

int main(){

    int t;
    cin >> t;
    while(t--){
        ll n;
        cin >> n;
        cout << n+1 - solve(n) << endl;
    }
    return 0;
}
